/*!
 * ut-angular-toast
 * https://github.com/untemps/ut-angular-toast
 * Version: 1.0.0 - 2018-03-10T01:17:29.349Z
 * License: MIT
 */
!function(){"use strict";function t(t){return function(e,o,n,a,s){var r=this,i=function(e){var o=5;if(angular.isNumber(e))o=Math.max(0,Math.min(t.length,Math.floor(e)));else if(angular.isString(e)){var n=t.indexOf(e);n>-1&&(o=n+1)}return o};r.uid="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var e=16*Math.random()|0,o="x"===t?e:3&e|8;return o.toString(16).toLocaleUpperCase()}),r.type=i(e),r.message=o,r.delay=n||0,r.showCloseButton=a||!1,r.animationClass=s}}function e(t){var e=this;e.toasts=t.toasts,e.remove=function(e){t.remove(e)}}function o(){var t=this;t.config={},t.config.toastDelay=5e3,t.config.showCloseButton=!0,t.config.animationClass="fade",t.config.stackToast=!0,t.setConfig=function(e){t.config=angular.extend(t.config,e)},t.$get=["utToastService",function(e){var o=e;return t.toasts=o.toasts,t.append=function(e,n,a,s,r,i){return a=a||t.config.toastDelay,s=angular.isDefined(s)?s:t.config.showCloseButton,r=r||t.config.animationClass,i=angular.isDefined(i)?i:t.config.stackToast,o.append(e,n,a,s,r,i)},t.remove=o.remove,t.removeAll=o.removeAll,t.clear=o.clear,this}]}function n(t,e,o,n,a){var s=this;s.toasts=[],s.append=function(r,i,l,c,u,f){var g=e.document.getElementsByClassName("toaster");if(0===g.length){var m=t.$new(),x='<div class="toaster" ng-controller="utToastController as ctrl"><div ng-repeat="toast in ctrl.toasts" ng-class="[toast.animationClass,{success: toast.type===1, error: toast.type===2, warning: toast.type===3, info: toast.type===4, neutral: toast.type===5}]"><span class="close" ng-click="ctrl.remove(toast)" ng-if="toast.showCloseButton"></span><span class="text" ng-bind-html="toast.message"></span></div></div>',v=o(x)(m);angular.element(e.document.body).append(v)}f||s.removeAll();var d=new a(r,i,l,c,u);return d.delay>0&&(d.timeout=n(function(){s.remove(d)},d.delay)),s.toasts.unshift(d),d},s.remove=function(t){return n.cancel(t.timeout),t.timeout=void 0,s.toasts.splice(s.toasts.indexOf(t),1),s.toasts.indexOf(t)===-1},s.removeAll=function(){for(;s.toasts.length>0;)s.remove(s.toasts[0]);return 0===s.toasts.length},s.clear=function(){s.removeAll();var t=e.document.getElementsByClassName("toaster");return t.length>0&&angular.element(t).remove(),0===t.length},t.$on("destroy",function(){s.clear()})}var a=angular.module("untemps.utToast",[]);a.constant("utToastType",["success","error","warning","info","neutral"]),a.factory("Toast",["utToastType",t]),a.controller("utToastController",["utToast",e]),a.provider("utToast",[o]),a.service("utToastService",["$rootScope","$window","$compile","$timeout","Toast",n])}();